var fnames = new Array(); var ftypes = new Array(); fnames[0] = 'EMAIL'; ftypes[0] = 'email'; fnames[1] = 'FNAME'; ftypes[1] = 'text'; fnames[2] = 'LNAME'; ftypes[2] = 'text';
var _MailChimpPreloadChecks = 0;

(function () {
	if(document.getElementById('mailchimp-form-validate') == null){
		var head = document.getElementsByTagName('head')[0];
		var script = document.createElement('script');
		script.id = 'mailchimp-form-validate';
		script.type = 'text/javascript';
		script.src = window.location.protocol + '//downloads.mailchimp.com/js/jquery.form-n-validate.js';
		head.appendChild(script);
	}
    setTimeout('IsMailChimpScriptLoaded();', 250);
})();


var IsMailChimpScriptLoaded = function () {
	if (_MailChimpPreloadChecks > 40)
		return;
	_MailChimpPreloadChecks++;
	try {
      var validatorLoaded = $("#fake-form").validate({});
	}catch (err){
		setTimeout('IsMailChimpScriptLoaded();', 250);
		return false;
	}
    mce_init_form();
  
};

function mce_init_form() {
	jQuery(document).ready(function ($) {
		$('.mailchimp-embed-form-wrapper').each(function(){
			var embedSubscribeFormWrapper = $(this);
			var embedSubscribeForm = $('.mailchimp-embed-form', embedSubscribeFormWrapper);
			var options = { errorClass: 'mce_inline_error', errorElement: 'div', onkeyup: function () { }, onfocusout: function () { }, onblur: function () { } };
			var mce_validator = embedSubscribeForm.validate(options);
			embedSubscribeForm.unbind('submit');//remove the validator so we can get into beforeSubmit on the ajaxform, which then calls the validator
			options = {
				url: 'http://tricky3.us8.list-manage.com/subscribe/post-json?u=a785008639c6bb0e1af98f017&id=21662557c9&c=?', type: 'GET', dataType: 'json', contentType: "application/json; charset=utf-8",
				beforeSubmit: function () {
					$('#mce_tmp_error_msg', embedSubscribeFormWrapper).remove();
					return mce_validator.form();
				},
				success: function (resp) {
					mce_success_cb(resp, embedSubscribeFormWrapper, embedSubscribeForm)
				}
			};
			
			embedSubscribeForm.bValidator({singleError: true});
			embedSubscribeForm.ajaxForm(options);
		});
	});
}
function mce_success_cb(resp, wrapper, theForm) {
	$('#mce-success-response', wrapper).hide();
	$('#mce-error-response', wrapper).hide();
	if (resp.result == "success") {
		$('#mce-' + resp.result + '-response', wrapper).show();
		$('#mce-' + resp.result + '-response', wrapper).html(resp.msg);
		theForm.each(function () {
			this.reset();
		});
	} else {
		var index = -1;
		var msg;
		try {
			var parts = resp.msg.split(' - ', 2);
			if (parts[1] == undefined) {
				msg = resp.msg;
			} else {
				i = parseInt(parts[0]);
				if (i.toString() == parts[0]) {
					index = parts[0];
					msg = parts[1];
				} else {
					index = -1;
					msg = resp.msg;
				}
			}
		} catch (e) {
			index = -1;
			msg = resp.msg;
		}
		try {
			if (index == -1) {
				$('#mce-' + resp.result + '-response', wrapper).show();
				$('#mce-' + resp.result + '-response', wrapper).html(msg);
			} else {
				err_id = 'mce_tmp_error_msg';
				html = '<div id="' + err_id + '" style="' + err_style + '"> ' + msg + '</div>';

				var input_id = wrapper.attr('id');
				var f = $(input_id);
				if (ftypes[index] == 'address') {
					input_id = '#mce-' + fnames[index] + '-addr1';
					f = $(input_id).parent().parent().get(0);
				} else if (ftypes[index] == 'date') {
					input_id = '#mce-' + fnames[index] + '-month';
					f = $(input_id).parent().parent().get(0);
				} else {
					input_id = '#mce-' + fnames[index];
					f = $().parent(input_id).get(0);
				}
				if (f) {
					$(f).append(html);
					$(input_id).focus();
				} else {
					$('#mce-' + resp.result + '-response', wrapper).show();
					$('#mce-' + resp.result + '-response', wrapper).html(msg);
				}
			}
		} catch (e) {
			$('#mce-' + resp.result + '-response', wrapper).show();
			$('#mce-' + resp.result + '-response', wrapper).html(msg);
		}
	}
}
